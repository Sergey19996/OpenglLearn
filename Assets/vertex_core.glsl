#version 330 core  //Эта строка задаёт версию GLSL.
//В данном случае, это GLSL версии 3.30, которая соответствует OpenGL 3.3.
//core указывает на использование Core Profile OpenGL (без устаревших функций).
layout (location = 0) in vec3 aPos; 
layout (location =1)  in vec3 aColor;

out vec3 ourColor;


uniform mat4 transform; // set in the code
//layout (location = 0) означает, что данные для этого атрибута будут передаваться из
//атрибутного слота 0 (определяется в вашем коде на C++ с помощью
//glVertexAttribPointer).
//in указывает, что это входной параметр для вершинного шейдера.
//vec3 означает, что каждая вершина описывается как 3D-вектор (три числа:x,y,z).
//aPos — имя этого атрибута, обычно используется для передачи позиции вершины.
//Эти данные, как правило, передаются из буфера вершин в графический процессор (GPU) с помощью таких функций, как glBufferData и glVertexAttribPointer.
void main(){

gl_Position = transform * vec4(aPos, 1.0); // Устанавливаем положение вершины
ourColor = aColor;



//gl_Position — встроенная переменная, которая содержит положение вершины в клип-пространстве. Это обязательный выходной параметр для вершинного шейдера.
//vec4(aPos, 1.0) преобразует трёхмерный вектор aPos в 4D-вектор (гомогенные координаты), добавляя четвёртую компоненту, равную  w=1.0.

}
//что делает шейдер 
// 1)Берёт позицию вершины из атрибута aPos, переданного из буфера вершин.
// 2)Преобразует её в 4D-вектор с w=1.0.
// 3)Записывает этот 4D-вектор в gl_Position, что завершает обработку текущей вершины.